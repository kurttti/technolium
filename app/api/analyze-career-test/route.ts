import { NextResponse } from 'next/server'
import OpenAI from 'openai'

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
})

const courses = [
  {
    name: "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
    description: "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∫—É—Ä—Å –ø–æ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—é –ø—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Python. –í–∫–ª—é—á–∞–µ—Ç –æ—Å–Ω–æ–≤—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, —Ä–∞–±–æ—Ç—É —Å –±–æ–ª—å—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫—É –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è ML-–º–æ–¥–µ–ª–µ–π.",
    skills: ["Python", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "SQL", "–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö", "–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑"],
    courseUrl: "https://technolium.ru/specialties/machine-learning"
  },
  {
    name: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ü–û",
    description: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∫—É—Ä—Å –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –û—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å CI/CD –∏ best practices –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.",
    skills: ["Selenium", "Python", "API —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "CI/CD", "Git", "–Ω–∞–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç-–∫–µ–π—Å–æ–≤"],
    courseUrl: "https://technolium.ru/specialties/software-testing"
  },
  {
    name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
    description: "–£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –≤–∫–ª—é—á–∞—è –∑–∞—â–∏—Ç—É —Å–µ—Ç–µ–π, –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏ —ç—Ç–∏—á–Ω—ã–π —Ö–∞–∫–∏–Ω–≥. –ö—É—Ä—Å —Å–æ—á–µ—Ç–∞–µ—Ç —Ç–µ–æ—Ä–∏—é —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏.",
    skills: ["—Å–µ—Ç–µ–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–∞–Ω–∞–ª–∏–∑ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π", "Linux", "—Å–∏—Å—Ç–µ–º–Ω–æ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ", "—ç—Ç–∏—á–Ω—ã–π —Ö–∞–∫–∏–Ω–≥"],
    courseUrl: "https://technolium.ru/specialties/information-security"
  },
  {
    name: "–°–µ—Ä–≤–µ—Ä–Ω–∞—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
    description: "–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –∫—É—Ä—Å –ø–æ backend-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã. –í–∫–ª—é—á–∞–µ—Ç —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã–º–∏, API –∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞–º–∏.",
    skills: ["Node.js", "Python/Django", "SQL", "REST API", "MongoDB", "–º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã"],
    courseUrl: "https://technolium.ru/specialties/web-development"
  }
]

export async function POST(request: Request) {
  try {
    const { answers } = await request.json()
    console.log('Analyzing career test answers:', answers)

    const response = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: "–¢—ã - –∫–∞—Ä—å–µ—Ä–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ IT. –°–æ–∑–¥–∞–π –º–æ—Ç–∏–≤–∏—Ä—É—é—â—É—é HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        },
        {
          role: "user",
          content: `
–ö—É—Ä—Å—ã:
${courses.map(course => `${course.name} (${course.courseUrl}): ${course.description}`).join('\n')}

–û—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
${answers.map((a: any) => `${a.questionId + 1}: ${a.answer}`).join('\n')}

–°–æ–∑–¥–∞–π HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:
<div class="results-container">
  <div class="strength-section">
    <p><strong>–í–∞—à–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:</strong> [—è—Ä–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ]</p>
    <div class="market-stats">
      <p class="stat">üöÄ [—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—Ä–ø–ª–∞—Ç]</p>
      <p class="stat">üíº [—Å–ø—Ä–æ—Å –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤]</p>
      <p class="stat">üåç [–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã]</p>
    </div>
  </div>

  <div class="recommendations-section">
    <p><strong>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</strong></p>
    <ul>
      <li><a href="[URL –∫—É—Ä—Å–∞]">[–ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞]</a></li>
      [–≤—Ç–æ—Ä–æ–π –∫—É—Ä—Å –µ—Å–ª–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç]
    </ul>
  </div>

  <div class="benefits-section">
    <p><strong>–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –Ω–∞—á–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:</strong></p>
    <ul>
      <li>üí∞ [–∑–∞—Ä–ø–ª–∞—Ç—ã –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö]</li>
      <li>üìà [–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–æ—Å—Ç–∞]</li>
      <li>üéØ [—Ç—Ä–µ–Ω–¥—ã]</li>
      <li>‚ö°Ô∏è [—Å—Ä–æ—á–Ω–æ—Å—Ç—å]</li>
    </ul>
  </div>

  <div class="success-story">
    <p><strong>–ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞:</strong></p>
    <p>üéì [–∏—Å—Ç–æ—Ä–∏—è –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞]</p>
  </div>
</div>`
        }
      ],
      temperature: 0.7,
      max_tokens: 1500
    })

    const content = response.choices[0]?.message?.content
    if (!content) {
      throw new Error('No response from GPT')
    }

    return NextResponse.json({ result: content })
  } catch (error) {
    console.error('Error analyzing test results:', error)
    return NextResponse.json(
      { error: 'Failed to analyze test results' },
      { status: 500 }
    )
  }
}
